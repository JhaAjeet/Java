package gui;

import core.EncryptorAndDecryptor;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Arrays;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Ajeet
 */
public class PasswordTakerForEncryption extends javax.swing.JFrame
{
    private File[] listOfFilesAndFolders;
    public PasswordTakerForEncryption(File[] listOfFilesAndFolders)
    {
        this.listOfFilesAndFolders = listOfFilesAndFolders;
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(ToBeEncryptedOrDecrypted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(ToBeEncryptedOrDecrypted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(ToBeEncryptedOrDecrypted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(ToBeEncryptedOrDecrypted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        initComponents();
        setResizable(false);
        eightCharInstructionLabel.setVisible(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        getRootPane().setDefaultButton(proceedButton);
        
        addWindowListener( new WindowAdapter()
        {
            public void windowClosing(WindowEvent e)
            {
                JFrame frame = (JFrame)e.getSource();
                Toolkit.getDefaultToolkit().beep();
                int result = JOptionPane.showConfirmDialog(frame, "Are you sure you want to exit the application?", "Exit Application", JOptionPane.YES_NO_OPTION);

                if (result == JOptionPane.YES_OPTION)
                    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
            }
        });
    }
    
    boolean verifyPasswords()
    {
        char password1[]=passwordField1.getPassword();
        char password2[]=passwordField2.getPassword();
        if(password1.length<8)
        {
            eightCharInstructionLabel.setText("For security reasons you must enter password of atleast 8 characters");
            eightCharInstructionLabel.setVisible(true);
            return false;
        }
        if(password1.length>7)
        {
            eightCharInstructionLabel.setVisible(false);
            if(password1.length==password2.length)
            {
                eightCharInstructionLabel.setVisible(false);
                if(Arrays.equals(password1, password2))
                {
                    return true;
                }

            }
            eightCharInstructionLabel.setText("Both the passwords differ!");
            eightCharInstructionLabel.setVisible(true);
        }
        
        return false;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        passwordField1 = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        passwordField2 = new javax.swing.JPasswordField();
        proceedButton = new javax.swing.JButton();
        eightCharInstructionLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("Enter a password:");

        passwordField1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        passwordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordField1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordField1FocusLost(evt);
            }
        });
        passwordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordField1KeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Re-enter the password:");

        passwordField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        passwordField2.setToolTipText("");
        passwordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordField2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordField2FocusLost(evt);
            }
        });
        passwordField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordField2KeyReleased(evt);
            }
        });

        proceedButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        proceedButton.setText("Proceed");
        proceedButton.setEnabled(false);
        proceedButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                proceedButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                proceedButtonMouseExited(evt);
            }
        });
        proceedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedButtonActionPerformed(evt);
            }
        });

        eightCharInstructionLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        eightCharInstructionLabel.setForeground(new java.awt.Color(255, 0, 0));
        eightCharInstructionLabel.setText(" Enter the password of atleast 8 characters");
        eightCharInstructionLabel.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 237, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passwordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(178, 178, 178))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(eightCharInstructionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(proceedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eightCharInstructionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proceedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(157, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void passwordField2KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_passwordField2KeyReleased
    {//GEN-HEADEREND:event_passwordField2KeyReleased
        if(verifyPasswords())
        {
            proceedButton.setEnabled(true);
        }
        else
        {
            proceedButton.setEnabled(false);
        }
    }//GEN-LAST:event_passwordField2KeyReleased

    private void passwordField1KeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_passwordField1KeyReleased
    {//GEN-HEADEREND:event_passwordField1KeyReleased
        if(verifyPasswords())
        {
            proceedButton.setEnabled(true);
        }
        else
        {
            proceedButton.setEnabled(false);
        }
    }//GEN-LAST:event_passwordField1KeyReleased

    private void proceedButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_proceedButtonActionPerformed
    {//GEN-HEADEREND:event_proceedButtonActionPerformed
        setVisible(false);
        dispose();
        
        new EncryptorAndDecryptor(listOfFilesAndFolders, "encrypt", new String(passwordField1.getPassword())).execute();
        
    }//GEN-LAST:event_proceedButtonActionPerformed

    private void proceedButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proceedButtonMouseEntered
        
        // set jButton background
            
        proceedButton.setBackground(new Color(0,101,183));
        
    }//GEN-LAST:event_proceedButtonMouseEntered

    private void proceedButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proceedButtonMouseExited
        
        // set jButton background
        proceedButton.setBackground(new Color(0,84,104));
        
    }//GEN-LAST:event_proceedButtonMouseExited

    private void passwordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordField1FocusGained
        
         // clear the password field on focus if the text is "password"
        // get the password text
        
        String pass = String.valueOf(passwordField1.getPassword());
        
        if(pass.trim().toLowerCase().equals("password"))
        {
            passwordField1.setText("");
            passwordField1.setForeground(Color.black);
        }
        
    }//GEN-LAST:event_passwordField1FocusGained

    private void passwordField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordField1FocusLost
       
        // if the password field is equal to password or empty
        // we will set the "password" text in the field 
        // on focus lost event
        // get the password text
        
        String pass = String.valueOf(passwordField1.getPassword());
        
        if(pass.trim().equals("") || 
           pass.trim().toLowerCase().equals("password"))
        {
            passwordField1.setText("password");
            passwordField1.setForeground(new Color(153,153,153));
        }
        
    }//GEN-LAST:event_passwordField1FocusLost

    private void passwordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordField2FocusGained
        // clear the password field on focus if the text is "password"
        // get the password text
        
        String pass = String.valueOf(passwordField2.getPassword());
        
        if(pass.trim().toLowerCase().equals("password"))
        {
            passwordField2.setText("");
            passwordField2.setForeground(Color.black);
        }
    }//GEN-LAST:event_passwordField2FocusGained

    private void passwordField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordField2FocusLost
       
        // if the password field is equal to password or empty
        // we will set the "password" text in the field 
        // on focus lost event
        // get the password text
        
        String pass = String.valueOf(passwordField2.getPassword());
        
        if(pass.trim().equals("") || 
           pass.trim().toLowerCase().equals("password"))
        {
            passwordField2.setText("password");
            passwordField2.setForeground(new Color(153,153,153));
        }
        
    }//GEN-LAST:event_passwordField2FocusLost

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel eightCharInstructionLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField passwordField1;
    private javax.swing.JPasswordField passwordField2;
    private javax.swing.JButton proceedButton;
    // End of variables declaration//GEN-END:variables
}
